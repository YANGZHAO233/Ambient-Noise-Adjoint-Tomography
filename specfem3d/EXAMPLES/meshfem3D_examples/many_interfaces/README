----------------------------------------------------------------------
README
(/SPECFEM3D/examples/meshfem3D_examples/many_interfaces/README)
----------------------------------------------------------------------

This is a more complicated example to explain the use of the internal mesher meshfem3D.

Option 1: run process.sh from local directory (must have access to mpi)
Option 2: follow instructions below for submitting separate jobs with qsub (or bsub)

WARNING: We do not recommend running this as a test example, due to its requirements.
   It requires at least 1.1 GB memory per core and about 415 GB of disk space.
   Please test the "simple_model" example instead.

----------------------------------------------------------------------

0. Run the simple example under examples/meshfem3D_examples/simple_model

1. Set up input files.

   > cd SPECFEM3D
   > rsync -av examples/meshfem3D_examples/many_interfaces/DATA DATA

   - adapt the submission scripts for the appropriate queues and number of cores:
     go_mesher_pbs.bash, go_generate_databases_pbs.bash, go_solver_pbs.bash

   - note: go_decomposer_pbs.bash is not used with the internal mesher

2. compile and run internal mesher

   > make xmeshfem3D
   > qsub go_mesher_pbs.bash

   - this should generate "proc000***_Database" files in OUTPUT_FILES/DATABASES_MPI/.

3. generate databases:

   - compile and run generate_databases in directory SPECFEM3D/:
     > make xgenerate_databases
     > qsub go_generate_databases_pbs.bash

     this will create binary mesh files, e.g. "proc000***_external_mesh.bin"
     in directory OUTPUT_FILES/DATABASES_MPI/.

     optional: If you have paraview, load the .vtk files (see simple_model.png).

4. run simulation:

   - compile and run specfem3D:
     > make xspecfem3D
     > qsub go_solver_pbs.bash

   - the job should take about 70 minutes
   - when the job is complete, you should have 3 sets (semd,semv,sema)
     of XX (ls -1 *semd | wc) seismogram files in the directory OUTPUT_FILES,
     as well as XX timestamp****** files

   - view seismograms, for example, using xmgrace:
   - xmgrace XXX &

----------------------------------------------------------------------
